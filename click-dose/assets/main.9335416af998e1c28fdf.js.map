{"version":3,"file":"assets/main.9335416af998e1c28fdf.js","mappings":"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","sources":["webpack://pen-click-dose-calculator/./src/lib/clickPlanner.ts","webpack://pen-click-dose-calculator/./src/index.ts"],"sourcesContent":["// --- i18n primitives ---------------------------------------------------------\nconst defaultMessages = {\n    \"err.mgPerDose\": \"mgPerDose must be > 0\",\n    \"err.clicksPerDose\": \"clicksPerDose must be > 0\",\n    \"err.volumePerDose\": \"volumePerDoseMl must be > 0\",\n    \"err.desiredMg\": \"desiredMg must be >= 0\",\n    \"err.minMax\": \"Invalid min/max clicks per set\",\n    \"warn.roundedToZero\": \"Rounded to 0 clicks.\",\n    \"warn.deltaMg\": \"Delivered dose ({delivered}) differs from requested ({requested}) by {delta}. Consider adjusting the rounding mode.\",\n    \"warn.totalBelowMin\": \"Total clicks ({total}) is below the recommended minimum of {min}. Very small sets can be unreliable.\",\n    \"warn.smallSet\": \"One or more sets are below {min} clicks; consider a different rounding mode or target.\",\n    \"warn.largeSet\": \"One or more sets exceed {max} clicks; this should not occur with the constraints.\",\n    \"warn.partitionFail\": \"Could not find a partition meeting constraints; returning a single set.\",\n};\nfunction interpolate(template, params) {\n    if (!params)\n        return template;\n    return template.replace(/\\{(\\w+)\\}/g, (_, k) => params[k] === undefined || params[k] === null ? \"\" : String(params[k]));\n}\n/**\n * Factory for a simple i18n instance.\n * - locale: Intl locale, e.g. \"en-GB\", \"es-ES\"\n * - overrides: provide your own messages for any keys you want to translate\n * - units: override unit labels if needed (\"mg\", \"ml\")\n * - numberFormat: tweak digits/formatting\n */\nexport function makeI18n(locale = \"en-GB\", overrides, units, numberFormat) {\n    const msgs = { ...defaultMessages, ...overrides };\n    const u = { mg: \"mg\", ml: \"ml\", ...units };\n    const nfMg = new Intl.NumberFormat(locale, {\n        maximumFractionDigits: 3,\n        ...(numberFormat?.mg ?? {}),\n    });\n    const nfMl = new Intl.NumberFormat(locale, {\n        maximumFractionDigits: 3,\n        ...(numberFormat?.ml ?? {}),\n    });\n    const nfInt = new Intl.NumberFormat(locale, {\n        maximumFractionDigits: 0,\n        ...(numberFormat?.integer ?? {}),\n    });\n    const NBSP = \"\\u00A0\"; // non-breaking space\n    return {\n        locale,\n        t: (key, params) => interpolate(msgs[key] ?? key, params),\n        format: {\n            mg: (n) => `${nfMg.format(n)}${NBSP}${u.mg}`,\n            ml: (n) => `${nfMl.format(n)}${NBSP}${u.ml}`,\n            integer: (n) => nfInt.format(n),\n        },\n    };\n}\n// --- public API --------------------------------------------------------------\nexport function planClicks(input) {\n    const { mgPerDose, desiredMg, clicksPerDose = 60, volumePerDoseMl = 0.6, maxClicksPerSet = 60, minClicksPerSet = 10, roundingMode = \"nearest\", i18n = makeI18n(), // default English\n     } = input;\n    const warnings = [];\n    // Validation (localized)\n    if (mgPerDose <= 0)\n        throw new Error(i18n.t(\"err.mgPerDose\"));\n    if (clicksPerDose <= 0)\n        throw new Error(i18n.t(\"err.clicksPerDose\"));\n    if (volumePerDoseMl <= 0)\n        throw new Error(i18n.t(\"err.volumePerDose\"));\n    if (desiredMg < 0)\n        throw new Error(i18n.t(\"err.desiredMg\"));\n    if (minClicksPerSet <= 0 || maxClicksPerSet < minClicksPerSet) {\n        throw new Error(i18n.t(\"err.minMax\"));\n    }\n    const mgPerClick = mgPerDose / clicksPerDose;\n    const mlPerClick = volumePerDoseMl / clicksPerDose;\n    const exactClicks = desiredMg / mgPerClick;\n    function roundByMode(x, mode) {\n        switch (mode) {\n            case \"down\":\n                return Math.floor(x);\n            case \"up\":\n                return Math.ceil(x);\n            case \"nearest\":\n            default:\n                return Math.round(x);\n        }\n    }\n    let totalClicks = roundByMode(exactClicks, roundingMode);\n    if (desiredMg === 0 || totalClicks === 0) {\n        return {\n            totalClicks: 0,\n            clickSets: [],\n            totalVolumeMl: 0,\n            requestedMg: desiredMg,\n            deliveredMg: 0,\n            perClick: { mg: mgPerClick, ml: mlPerClick },\n            warnings: desiredMg === 0\n                ? warnings\n                : [...warnings, i18n.t(\"warn.roundedToZero\")],\n        };\n    }\n    const deliveredMg = totalClicks * mgPerClick;\n    const deltaMg = deliveredMg - desiredMg;\n    // If the difference is more than half a click’s mg, let user know.\n    if (Math.abs(deltaMg) > mgPerClick / 2) {\n        warnings.push(i18n.t(\"warn.deltaMg\", {\n            delivered: i18n.format.mg(deliveredMg),\n            requested: i18n.format.mg(desiredMg),\n            delta: i18n.format.mg(Math.abs(deltaMg)),\n        }));\n    }\n    if (totalClicks < minClicksPerSet) {\n        warnings.push(i18n.t(\"warn.totalBelowMin\", {\n            total: i18n.format.integer(totalClicks),\n            min: i18n.format.integer(minClicksPerSet),\n        }));\n        return {\n            totalClicks,\n            clickSets: [totalClicks],\n            totalVolumeMl: totalClicks * mlPerClick,\n            requestedMg: desiredMg,\n            deliveredMg,\n            perClick: { mg: mgPerClick, ml: mlPerClick },\n            warnings,\n        };\n    }\n    const clickSets = partitionClicksNicely(totalClicks, {\n        min: minClicksPerSet,\n        max: maxClicksPerSet,\n    });\n    if (!clickSets || clickSets.length === 0) {\n        warnings.push(i18n.t(\"warn.partitionFail\"));\n        return {\n            totalClicks,\n            clickSets: [totalClicks],\n            totalVolumeMl: totalClicks * mlPerClick,\n            requestedMg: desiredMg,\n            deliveredMg,\n            perClick: { mg: mgPerClick, ml: mlPerClick },\n            warnings,\n        };\n    }\n    if (clickSets.some((c) => c < minClicksPerSet)) {\n        warnings.push(i18n.t(\"warn.smallSet\", { min: i18n.format.integer(minClicksPerSet) }));\n    }\n    if (clickSets.some((c) => c > maxClicksPerSet)) {\n        warnings.push(i18n.t(\"warn.largeSet\", { max: i18n.format.integer(maxClicksPerSet) }));\n    }\n    return {\n        totalClicks,\n        clickSets,\n        totalVolumeMl: totalClicks * mlPerClick,\n        requestedMg: desiredMg,\n        deliveredMg,\n        perClick: { mg: mgPerClick, ml: mlPerClick },\n        warnings,\n    };\n}\n// --- partitioning internals (unchanged logic) --------------------------------\nfunction partitionClicksNicely(total, opts) {\n    const { min, max } = opts;\n    const K = Math.ceil(total / max);\n    if (K <= 0)\n        return [];\n    if (K === 1 && total >= min && total <= max)\n        return [total];\n    if (total < K * min) {\n        const altK = Math.max(1, Math.floor(total / min));\n        if (altK >= 1 && total <= altK * max && total >= altK * min) {\n            return partitionWithK(total, altK, min, max);\n        }\n    }\n    return partitionWithK(total, K, min, max);\n}\nfunction partitionWithK(total, K, min, max) {\n    const balanceWeight = 0.05;\n    const tensBonus = 2.0;\n    const fivePenalty = 1.0;\n    const nonFivePenalty = 3.0;\n    const atMinPenalty = 4.0;\n    const target = total / K;\n    function scoreValue(v) {\n        let score = balanceWeight * Math.pow(v - target, 2);\n        if (v % 10 === 0)\n            score -= tensBonus;\n        else if (v % 5 === 0)\n            score += fivePenalty;\n        else\n            score += nonFivePenalty;\n        if (v === min)\n            score += atMinPenalty;\n        return score;\n    }\n    const dp = Array.from({ length: K + 1 }, () => Array(total + 1).fill(Number.POSITIVE_INFINITY));\n    const back = Array.from({ length: K + 1 }, () => Array(total + 1).fill(-1));\n    dp[0][0] = 0;\n    for (let i = 1; i <= K; i++) {\n        const minSum = i * min;\n        const maxSum = Math.min(total, i * max);\n        for (let s = minSum; s <= maxSum; s++) {\n            const sPrevMin = (i - 1) * min;\n            const sPrevMax = Math.min(total, (i - 1) * max);\n            const vMin = Math.max(min, s - sPrevMax);\n            const vMax = Math.min(max, s - sPrevMin);\n            for (let v = vMin; v <= vMax; v++) {\n                const prevScore = dp[i - 1][s - v];\n                if (prevScore === Number.POSITIVE_INFINITY)\n                    continue;\n                const cand = prevScore + scoreValue(v);\n                if (cand < dp[i][s]) {\n                    dp[i][s] = cand;\n                    back[i][s] = v;\n                }\n            }\n        }\n    }\n    if (dp[K][total] === Number.POSITIVE_INFINITY)\n        return [];\n    const sets = new Array(K);\n    let s = total;\n    for (let i = K; i >= 1; i--) {\n        const v = back[i][s];\n        if (v < 0)\n            return [];\n        sets[i - 1] = v;\n        s -= v;\n    }\n    return sets;\n}\n","import \"./styles.css\";\nimport { planClicks, makeI18n } from \"./lib/clickPlanner\";\nconst CLICKS_PER_DOSE = 60;\nconst VOLUME_PER_DOSE_ML = 0.6;\nconst DEFAULT_LOCALE = \"en-GB\";\n// Quick-pick values\nconst QUICK_MG = [2.5, 5, 7.5, 10, 12.5, 15];\nconst UI_STRINGS = {\n    \"en-GB\": {\n        title: \"Pen Click Dose Calculator\",\n        haveLabel: \"I have a\",\n        wantLabel: \"I want a dose of\",\n        resultHeading: \"Result\",\n        clickSets: \"Click sets\",\n        totalVolume: \"Total volume\",\n        deliveredDose: \"Delivered dose\",\n        requested: \"requested\",\n        disclaimer: \"This tool performs arithmetic planning only. Always follow your device’s instructions and consult a clinician or pharmacist for dosing decisions.\",\n        penWord: \"pen\",\n        ariaPen: \"Pen strength (mg per full dose)\",\n        ariaDesired: \"Desired dose (mg)\",\n        penHint: (n) => `This is the labelled dose per full dial (e.g. ${n} clicks).`,\n        summary: (p, t) => `(Pen: ${p}; Target: ${t})`,\n        perClickAndDose: (ml, mg) => `Per click: ${ml}; Per click dose: ${mg}`,\n        totalClicksLine: (n) => `Total: ${n} clicks`,\n        stepHint: (s) => `Step: ${s} per click`,\n        enterDosePrompt: \"Enter a dose to see the plan.\",\n        quickPicksAria: \"Quick picks\",\n        mgSuffix: \"mg\",\n        desiredPlaceholder: (ex) => `e.g. ${ex}`,\n    },\n    \"fr-FR\": {\n        title: \"Calculateur de dose par clic\",\n        haveLabel: \"J’ai un\",\n        wantLabel: \"Je veux une dose de\",\n        resultHeading: \"Résultat\",\n        clickSets: \"Ensembles de clics\",\n        totalVolume: \"Volume total\",\n        deliveredDose: \"Dose délivrée\",\n        requested: \"demandée\",\n        disclaimer: \"Cet outil ne fournit qu’une aide de calcul. Suivez toujours les instructions de votre appareil et demandez conseil à un professionnel de santé.\",\n        penWord: \"stylo\",\n        ariaPen: \"Force du stylo (mg par dose complète)\",\n        ariaDesired: \"Dose souhaitée (mg)\",\n        penHint: (n) => `Ceci est la dose indiquée pour un tour complet (p. ex. ${n}\\u202fclics).`,\n        summary: (p, t) => `(Stylo\\u202f: ${p}\\u202f; Objectif\\u202f: ${t})`,\n        perClickAndDose: (ml, mg) => `Par clic\\u202f: ${ml}\\u202f; Dose par clic\\u202f: ${mg}`,\n        totalClicksLine: (n) => `Total\\u202f: ${n} clics`,\n        stepHint: (s) => `Pas\\u202f: ${s} par clic`,\n        enterDosePrompt: \"Saisissez une dose pour afficher le plan.\",\n        quickPicksAria: \"Raccourcis\",\n        mgSuffix: \"mg\",\n        desiredPlaceholder: (ex) => `p. ex. ${ex}`,\n    },\n    \"de-DE\": {\n        title: \"Klick‑Dosis‑Rechner\",\n        haveLabel: \"Ich habe einen\",\n        wantLabel: \"Ich möchte eine Dosis von\",\n        resultHeading: \"Ergebnis\",\n        clickSets: \"Klick‑Sets\",\n        totalVolume: \"Gesamtvolumen\",\n        deliveredDose: \"Abgegebene Dosis\",\n        requested: \"gewünscht\",\n        disclaimer: \"Dieses Werkzeug liefert nur eine rechnerische Planung. Befolgen Sie stets die Anweisungen Ihres Geräts und lassen Sie sich medizinisch beraten.\",\n        penWord: \"Pen\",\n        ariaPen: \"Pen‑Stärke (mg pro Volldosis)\",\n        ariaDesired: \"Gewünschte Dosis (mg)\",\n        penHint: (n) => `Dies ist die angegebene Dosis pro voller Drehung (z. B. ${n} Klicks).`,\n        summary: (p, t) => `(Pen: ${p}; Ziel: ${t})`,\n        perClickAndDose: (ml, mg) => `Pro Klick: ${ml}; Dosis pro Klick: ${mg}`,\n        totalClicksLine: (n) => `Summe: ${n} Klicks`,\n        stepHint: (s) => `Schrittweite: ${s} pro Klick`,\n        enterDosePrompt: \"Geben Sie eine Dosis ein, um den Plan zu sehen.\",\n        quickPicksAria: \"Schnellauswahl\",\n        mgSuffix: \"mg\",\n        desiredPlaceholder: (ex) => `z. B. ${ex}`,\n    },\n};\n// Planner warning/error messages (overrides) for FR/DE\nconst MESSAGES = {\n    \"en-GB\": {},\n    \"fr-FR\": {\n        \"err.mgPerDose\": \"mgPerDose doit être > 0\",\n        \"err.clicksPerDose\": \"clicksPerDose doit être > 0\",\n        \"err.volumePerDose\": \"volumePerDoseMl doit être > 0\",\n        \"err.desiredMg\": \"desiredMg doit être ≥ 0\",\n        \"err.minMax\": \"Plage min/max de clics invalide\",\n        \"warn.roundedToZero\": \"Arrondi à 0 clic.\",\n        \"warn.deltaMg\": \"La dose délivrée ({delivered}) diffère de la dose demandée ({requested}) de {delta}. Envisagez d'ajuster le mode d'arrondi.\",\n        \"warn.totalBelowMin\": \"Le total de clics ({total}) est inférieur au minimum recommandé de {min}. Les très petits ensembles peuvent être peu fiables.\",\n        \"warn.smallSet\": \"Un ou plusieurs ensembles sont inférieurs à {min} clics; envisagez un autre mode d'arrondi ou un autre objectif.\",\n        \"warn.largeSet\": \"Un ou plusieurs ensembles dépassent {max} clics; cela ne devrait pas se produire avec ces contraintes.\",\n        \"warn.partitionFail\": \"Impossible de trouver une partition respectant les contraintes; un seul ensemble sera utilisé.\",\n    },\n    \"de-DE\": {\n        \"err.mgPerDose\": \"mgPerDose muss > 0 sein\",\n        \"err.clicksPerDose\": \"clicksPerDose muss > 0 sein\",\n        \"err.volumePerDose\": \"volumePerDoseMl muss > 0 sein\",\n        \"err.desiredMg\": \"desiredMg muss ≥ 0 sein\",\n        \"err.minMax\": \"Ungültiger Minimal-/Maximalbereich für Klicks\",\n        \"warn.roundedToZero\": \"Auf 0 Klicks gerundet.\",\n        \"warn.deltaMg\": \"Abgegebene Dosis ({delivered}) weicht von der gewünschten ({requested}) um {delta} ab. Passen Sie ggf. den Rundungsmodus an.\",\n        \"warn.totalBelowMin\": \"Gesamtanzahl der Klicks ({total}) liegt unter dem empfohlenen Minimum von {min}. Sehr kleine Sätze können unzuverlässig sein.\",\n        \"warn.smallSet\": \"Ein oder mehrere Sätze liegen unter {min} Klicks; erwägen Sie einen anderen Rundungsmodus oder Zielwert.\",\n        \"warn.largeSet\": \"Ein oder mehrere Sätze überschreiten {max} Klicks; dies sollte mit den Vorgaben nicht vorkommen.\",\n        \"warn.partitionFail\": \"Es konnte keine gültige Aufteilung gefunden werden; es wird ein einzelner Satz verwendet.\",\n    },\n};\n// Utilities\nfunction requireEl(id) {\n    const el = document.getElementById(id);\n    if (!el)\n        throw new Error(`Required element #${id} not found`);\n    return el;\n}\nfunction roundTo(n, decimals = 6) {\n    const p = Math.pow(10, decimals);\n    return Math.round(n * p) / p;\n}\nfunction toFixedTrim(n, decimals = 6) {\n    // Produce a clean decimal string without trailing zeros or dangling dot\n    return roundTo(n, decimals)\n        .toFixed(decimals)\n        .replace(/\\.?0+$/, \"\");\n}\n// DOM handles\nconst formEl = requireEl(\"planner-form\");\nconst penSelect = requireEl(\"pen-mg\");\nconst desiredInput = requireEl(\"desired-mg-input\");\nconst quickPicksEl = requireEl(\"quick-picks\");\nconst stepHintEl = requireEl(\"step-hint\");\nconst resultEl = requireEl(\"result\");\nconst titleEl = requireEl(\"t-title\");\nconst haveLabelEl = requireEl(\"t-have\");\nconst wantLabelEl = requireEl(\"t-want\");\nconst disclaimerEl = requireEl(\"t-disclaimer\");\nconst penHintEl = requireEl(\"t-pen-hint\");\nconst localeSwitcher = requireEl(\"locale-switcher\");\nconst copyright = document.getElementById(\"copyright-year\");\n// Footer year\nif (copyright) {\n    copyright.textContent = String(new Date().getFullYear());\n}\nlet currentLocale = DEFAULT_LOCALE;\nlet i18n = makeI18n(currentLocale, MESSAGES[currentLocale], { ml: \"ml\" });\nlet ui = UI_STRINGS[currentLocale];\nconst HTML_LANG = {\n    \"en-GB\": \"en\",\n    \"fr-FR\": \"fr\",\n    \"de-DE\": \"de\",\n};\nfunction formatMg(n) {\n    return i18n.format.mg(n);\n}\nfunction mgPerClick(penMg) {\n    return penMg / CLICKS_PER_DOSE;\n}\nfunction setDesiredStep() {\n    const step = mgPerClick(Number(penSelect.value)) || 0.01;\n    desiredInput.step = toFixedTrim(step, 6); // 6 is plenty for our use\n    stepHintEl.textContent = ui.stepHint(formatMg(step));\n}\nfunction buildQuickPicks() {\n    quickPicksEl.innerHTML = \"\";\n    quickPicksEl.setAttribute(\"aria-label\", ui.quickPicksAria);\n    for (const v of QUICK_MG) {\n        const btn = document.createElement(\"button\");\n        btn.type = \"button\";\n        btn.dataset.mg = String(v);\n        btn.className =\n            \"inline-flex items-center rounded-md bg-zinc-100 px-2 py-1 text-sm font-medium text-zinc-800 ring-1 ring-inset ring-zinc-200 hover:bg-zinc-200 dark:bg-zinc-800 dark:text-zinc-100 dark:ring-zinc-700 dark:hover:bg-zinc-700\";\n        btn.textContent = formatMg(v);\n        btn.addEventListener(\"click\", () => {\n            desiredInput.value = String(v);\n            render();\n        });\n        quickPicksEl.appendChild(btn);\n    }\n}\nfunction applyLocale(loc) {\n    currentLocale = loc;\n    i18n = makeI18n(loc, MESSAGES[loc], { ml: \"ml\" });\n    ui = UI_STRINGS[loc];\n    document.documentElement.lang = HTML_LANG[loc];\n    // Static labels\n    titleEl.textContent = ui.title;\n    haveLabelEl.textContent = ui.haveLabel;\n    wantLabelEl.textContent = ui.wantLabel;\n    disclaimerEl.textContent = ui.disclaimer;\n    // Pen hint with localized example \"60 clicks\"\n    const exampleNum = i18n.format.integer(CLICKS_PER_DOSE);\n    penHintEl.textContent = ui.penHint(exampleNum);\n    // Input mg suffix and placeholder\n    const mgSuffix = desiredInput.parentElement?.querySelector(\"span\");\n    if (mgSuffix)\n        mgSuffix.textContent = ui.mgSuffix;\n    desiredInput.placeholder = ui.desiredPlaceholder(i18n.format.mg(5));\n    // Update quick picks labels\n    buildQuickPicks();\n    // Update step hint\n    setDesiredStep();\n    // Update aria labels\n    penSelect.setAttribute(\"aria-label\", ui.ariaPen);\n    desiredInput.setAttribute(\"aria-label\", ui.ariaDesired);\n    document.title = ui.title;\n    render();\n}\nfunction clear(el) {\n    while (el.firstChild)\n        el.removeChild(el.firstChild);\n}\nfunction el(tag, className, text) {\n    const node = document.createElement(tag);\n    if (className)\n        node.className = className;\n    if (text != null)\n        node.textContent = text;\n    return node;\n}\nfunction chip(text) {\n    return el(\"span\", \"inline-flex items-center rounded-md bg-zinc-100 px-2 py-0.5 text-sm font-medium text-zinc-800 ring-1 ring-inset ring-zinc-200 dark:bg-zinc-800 dark:text-zinc-100 dark:ring-zinc-700\", text);\n}\nfunction render() {\n    const penMg = Number(penSelect.value);\n    const desired = desiredInput.valueAsNumber;\n    // Keep step hint current if pen changed\n    setDesiredStep();\n    clear(resultEl);\n    if (!Number.isFinite(desired) || desired <= 0) {\n        resultEl.append(el(\"div\", \"text-sm text-zinc-500\", ui.enterDosePrompt));\n        return;\n    }\n    const plan = planClicks({\n        mgPerDose: penMg,\n        desiredMg: desired,\n        clicksPerDose: CLICKS_PER_DOSE,\n        volumePerDoseMl: VOLUME_PER_DOSE_ML,\n        i18n,\n    });\n    // Header\n    const headerRow = el(\"div\", \"flex items-baseline gap-2 mb-3\");\n    headerRow.append(el(\"h2\", \"text-lg font-semibold\", ui.resultHeading), el(\"span\", \"text-xs text-zinc-500\", ui.summary(formatMg(penMg), formatMg(desired))));\n    resultEl.append(headerRow);\n    const grid = el(\"div\", \"grid grid-cols-1 gap-2 sm:grid-cols-2\");\n    // Click sets panel\n    const setsCard = el(\"div\", \"rounded-md bg-zinc-50 p-3 dark:bg-zinc-800/50\");\n    setsCard.append(el(\"div\", \"text-sm text-zinc-600 dark:text-zinc-300\", ui.clickSets));\n    const setsLine = el(\"div\", \"mt-1 text-base font-medium\");\n    plan.clickSets.forEach((n, i) => {\n        if (i > 0)\n            setsLine.append(el(\"span\", \"mx-1 text-zinc-400\", \"+\"));\n        setsLine.append(chip(String(n)));\n    });\n    setsCard.append(setsLine);\n    setsCard.append(el(\"div\", \"text-xs text-zinc-500\", ui.totalClicksLine(i18n.format.integer(plan.totalClicks))));\n    // Volume panel\n    const volCard = el(\"div\", \"rounded-md bg-zinc-50 p-3 dark:bg-zinc-800/50\");\n    volCard.append(el(\"div\", \"text-sm text-zinc-600 dark:text-zinc-300\", ui.totalVolume));\n    volCard.append(el(\"div\", \"mt-1 text-base font-medium\", i18n.format.ml(plan.totalVolumeMl)));\n    volCard.append(el(\"div\", \"text-xs text-zinc-500\", ui.perClickAndDose(i18n.format.ml(plan.perClick.ml), i18n.format.mg(plan.perClick.mg))));\n    grid.append(setsCard, volCard);\n    resultEl.append(grid);\n    // Delivered vs requested\n    resultEl.append(el(\"div\", \"mt-3 text-sm\", `${ui.deliveredDose}: ${i18n.format.mg(plan.deliveredMg)} (${ui.requested}: ${i18n.format.mg(plan.requestedMg)})`));\n    // Warnings\n    if (plan.warnings.length) {\n        const ul = el(\"ul\", \"mt-2 list-disc pl-5 text-sm text-amber-700 dark:text-amber-400\");\n        plan.warnings.forEach((w) => ul.append(el(\"li\", undefined, w)));\n        resultEl.append(ul);\n    }\n}\n// Events\nformEl.addEventListener(\"change\", (e) => {\n    // pens or input blur change\n    const t = e.target;\n    if (t && (t.id === \"pen-mg\" || t.id === \"desired-mg-input\")) {\n        render();\n    }\n});\nformEl.addEventListener(\"input\", (e) => {\n    const t = e.target;\n    if (t && t.id === \"desired-mg-input\")\n        render();\n});\ndesiredInput.addEventListener(\"keydown\", (e) => {\n    if (e.key !== \"ArrowUp\" && e.key !== \"ArrowDown\")\n        return;\n    const step = mgPerClick(Number(penSelect.value));\n    if (!(step > 0))\n        return;\n    e.preventDefault(); // we’ll handle the increment precisely\n    const dir = e.key === \"ArrowUp\" ? 1 : -1;\n    const current = Number.isFinite(desiredInput.valueAsNumber) ? desiredInput.valueAsNumber : 0;\n    // Move by one click exactly: convert to click count, increment, convert back\n    let clicks = Math.round(current / step);\n    clicks += dir;\n    const next = clicks * step;\n    desiredInput.value = toFixedTrim(next, 6);\n    render();\n});\nlocaleSwitcher.addEventListener(\"click\", (ev) => {\n    const target = ev.target.closest(\"[data-locale]\");\n    if (!target)\n        return;\n    const loc = target.dataset.locale;\n    if (loc && loc !== currentLocale) {\n        // Update button states\n        for (const btn of Array.from(localeSwitcher.querySelectorAll(\"button[data-locale]\"))) {\n            const selected = btn.dataset.locale === loc;\n            btn.setAttribute(\"aria-pressed\", selected ? \"true\" : \"false\");\n            btn.classList.toggle(\"ring-2\", selected);\n            btn.classList.toggle(\"ring-indigo-600/60\", selected);\n            btn.classList.toggle(\"border-indigo-600\", selected);\n            btn.classList.toggle(\"dark:ring-indigo-500/60\", selected);\n            btn.classList.toggle(\"dark:border-indigo-500\", selected);\n        }\n        applyLocale(loc);\n    }\n});\n// Initial locale + render\napplyLocale(DEFAULT_LOCALE);\n// Prefill with a friendly default (matches your old 5 mg)\ndesiredInput.value = \"5\";\nrender();\n"],"names":["defaultMessages","makeI18n","locale","overrides","units","numberFormat","msgs","u","mg","ml","nfMg","Intl","NumberFormat","maximumFractionDigits","nfMl","nfInt","integer","t","key","params","template","replace","_","k","undefined","String","interpolate","format","n","partitionWithK","total","K","min","max","target","scoreValue","v","score","Math","pow","dp","Array","from","length","fill","Number","POSITIVE_INFINITY","back","i","minSum","maxSum","s","sPrevMin","sPrevMax","vMin","vMax","prevScore","cand","sets","DEFAULT_LOCALE","QUICK_MG","UI_STRINGS","title","haveLabel","wantLabel","resultHeading","clickSets","totalVolume","deliveredDose","requested","disclaimer","penWord","ariaPen","ariaDesired","penHint","summary","p","perClickAndDose","totalClicksLine","stepHint","enterDosePrompt","quickPicksAria","mgSuffix","desiredPlaceholder","ex","MESSAGES","requireEl","id","el","document","getElementById","Error","toFixedTrim","decimals","round","roundTo","toFixed","formEl","penSelect","desiredInput","quickPicksEl","stepHintEl","resultEl","titleEl","haveLabelEl","wantLabelEl","disclaimerEl","penHintEl","localeSwitcher","copyright","textContent","Date","getFullYear","currentLocale","i18n","ui","HTML_LANG","formatMg","mgPerClick","penMg","setDesiredStep","step","value","applyLocale","loc","documentElement","lang","exampleNum","parentElement","querySelector","placeholder","innerHTML","setAttribute","btn","createElement","type","dataset","className","addEventListener","render","appendChild","buildQuickPicks","tag","text","node","desired","valueAsNumber","firstChild","removeChild","clear","isFinite","append","plan","input","mgPerDose","desiredMg","clicksPerDose","volumePerDoseMl","maxClicksPerSet","minClicksPerSet","roundingMode","warnings","mlPerClick","totalClicks","x","mode","floor","ceil","roundByMode","totalVolumeMl","requestedMg","deliveredMg","perClick","deltaMg","abs","push","delivered","delta","opts","altK","partitionClicksNicely","some","c","planClicks","headerRow","grid","setsCard","setsLine","forEach","volCard","ul","w","e","preventDefault","dir","current","clicks","next","ev","closest","querySelectorAll","selected","classList","toggle"],"sourceRoot":""}